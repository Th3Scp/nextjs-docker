Starting deployment of Th3Scp/nextjs-docker:main to localhost.
Preparing container with helper image: ghcr.io/coollabsio/coolify-helper:1.0.8.
[CMD]: docker stop --time=30 foskgs0s88oocoog0ckow0k8
Error response from daemon: No such container: foskgs0s88oocoog0ckow0k8
[CMD]: docker rm -f foskgs0s88oocoog0ckow0k8
Error response from daemon: No such container: foskgs0s88oocoog0ckow0k8
[CMD]: docker run -d --network coolify --name foskgs0s88oocoog0ckow0k8 --rm -v /var/run/docker.sock:/var/run/docker.sock ghcr.io/coollabsio/coolify-helper:1.0.8
c4a6afc3f8df3b4dc565f48fc8fc7ed0cb4d5d4551864ef287de166cf3c1f097
[CMD]: docker exec foskgs0s88oocoog0ckow0k8 bash -c 'GIT_SSH_COMMAND="ssh -o ConnectTimeout=30 -p 22 -o Port=22 -o LogLevel=ERROR -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" git ls-remote https://github.com/Th3Scp/nextjs-docker main'
da5abae0358001443a2438b970508c8c997eb62c	refs/heads/main
----------------------------------------
Importing Th3Scp/nextjs-docker:main (commit sha HEAD) to /artifacts/foskgs0s88oocoog0ckow0k8.
[CMD]: docker exec foskgs0s88oocoog0ckow0k8 bash -c 'git clone -b "main" https://github.com/Th3Scp/nextjs-docker /artifacts/foskgs0s88oocoog0ckow0k8 && cd /artifacts/foskgs0s88oocoog0ckow0k8 && sed -i "s#git@\(.*\):#https://\1/#g" /artifacts/foskgs0s88oocoog0ckow0k8/.gitmodules || true && cd /artifacts/foskgs0s88oocoog0ckow0k8 && GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" git submodule update --init --recursive && cd /artifacts/foskgs0s88oocoog0ckow0k8 && GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" git lfs pull'
Cloning into '/artifacts/foskgs0s88oocoog0ckow0k8'...
sed: /artifacts/foskgs0s88oocoog0ckow0k8/.gitmodules: No such file or directory
[CMD]: docker exec foskgs0s88oocoog0ckow0k8 bash -c 'cd /artifacts/foskgs0s88oocoog0ckow0k8 && git log -1 da5abae0358001443a2438b970508c8c997eb62c --pretty=%B'
change node type
Image not found (uwcogw0cg8wwo4ws448g4cc8:da5abae0358001443a2438b970508c8c997eb62c). Building new image.
[CMD]: docker exec foskgs0s88oocoog0ckow0k8 bash -c 'cat /artifacts/foskgs0s88oocoog0ckow0k8/Dockerfile'
# syntax=docker.io/docker/dockerfile:1
FROM node:22-alpine AS base
# Install dependencies only when needed
FROM base AS deps
# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
RUN apk add --no-cache libc6-compat
WORKDIR /src/app
# Install dependencies based on the preferred package manager
COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* .npmrc* ./
RUN \
if [ -f yarn.lock ]; then yarn --frozen-lockfile; \
elif [ -f package-lock.json ]; then npm ci; \
elif [ -f pnpm-lock.yaml ]; then corepack enable pnpm && pnpm i --frozen-lockfile; \
else echo "Lockfile not found." && exit 1; \
fi
# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /src/app
COPY --from=deps /src/app/node_modules ./node_modules
COPY . .
# Next.js collects completely anonymous telemetry data about general usage.
# Learn more here: https://nextjs.org/telemetry
# Uncomment the following line in case you want to disable telemetry during the build.
# ENV NEXT_TELEMETRY_DISABLED=1
RUN \
if [ -f yarn.lock ]; then yarn run build; \
elif [ -f package-lock.json ]; then npm run build; \
elif [ -f pnpm-lock.yaml ]; then corepack enable pnpm && pnpm run build; \
else echo "Lockfile not found." && exit 1; \
fi
# Production image, copy all the files and run next
FROM base AS runner
WORKDIR /src/app
ENV NODE_ENV=production
# Uncomment the following line in case you want to disable telemetry during runtime.
# ENV NEXT_TELEMETRY_DISABLED=1
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs
COPY --from=builder /src/app/public ./public
# Automatically leverage output traces to reduce image size
# https://nextjs.org/docs/advanced-features/output-file-tracing
COPY --from=builder --chown=nextjs:nodejs /src/app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /src/app/.next/static ./.next/static
USER nextjs
EXPOSE 3000
ENV PORT=3000
# server.js is created by next build from the standalone output
# https://nextjs.org/docs/pages/api-reference/config/next-config-js/output
ENV HOSTNAME="0.0.0.0"
CMD ["node", "server.js"]
[CMD]: docker exec foskgs0s88oocoog0ckow0k8 bash -c 'cat /artifacts/foskgs0s88oocoog0ckow0k8/Dockerfile'
# syntax=docker.io/docker/dockerfile:1
FROM node:22-alpine AS base
# Install dependencies only when needed
FROM base AS deps
# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
RUN apk add --no-cache libc6-compat
WORKDIR /src/app
# Install dependencies based on the preferred package manager
COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* .npmrc* ./
RUN \
if [ -f yarn.lock ]; then yarn --frozen-lockfile; \
elif [ -f package-lock.json ]; then npm ci; \
elif [ -f pnpm-lock.yaml ]; then corepack enable pnpm && pnpm i --frozen-lockfile; \
else echo "Lockfile not found." && exit 1; \
fi
# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /src/app
COPY --from=deps /src/app/node_modules ./node_modules
COPY . .
# Next.js collects completely anonymous telemetry data about general usage.
# Learn more here: https://nextjs.org/telemetry
# Uncomment the following line in case you want to disable telemetry during the build.
# ENV NEXT_TELEMETRY_DISABLED=1
RUN \
if [ -f yarn.lock ]; then yarn run build; \
elif [ -f package-lock.json ]; then npm run build; \
elif [ -f pnpm-lock.yaml ]; then corepack enable pnpm && pnpm run build; \
else echo "Lockfile not found." && exit 1; \
fi
# Production image, copy all the files and run next
FROM base AS runner
WORKDIR /src/app
ENV NODE_ENV=production
# Uncomment the following line in case you want to disable telemetry during runtime.
# ENV NEXT_TELEMETRY_DISABLED=1
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs
COPY --from=builder /src/app/public ./public
# Automatically leverage output traces to reduce image size
# https://nextjs.org/docs/advanced-features/output-file-tracing
COPY --from=builder --chown=nextjs:nodejs /src/app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /src/app/.next/static ./.next/static
USER nextjs
EXPOSE 3000
ENV PORT=3000
# server.js is created by next build from the standalone output
# https://nextjs.org/docs/pages/api-reference/config/next-config-js/output
ENV HOSTNAME="0.0.0.0"
CMD ["node", "server.js"]
----------------------------------------
Building docker image started.
To check the current progress, click on Show Debug Logs.
[CMD]: docker exec foskgs0s88oocoog0ckow0k8 bash -c 'cat /artifacts/build.sh'
docker build  --add-host coolify:10.0.1.8 --add-host coolify-db:10.0.1.3 --add-host coolify-realtime:10.0.1.7 --add-host coolify-redis:10.0.1.5 --add-host sgcskw8gwcc0gw4w8sokw4sg:10.0.1.4 --add-host sk0cs0wsg88k00gksckgc0c0:10.0.1.6 --network host -f /artifacts/foskgs0s88oocoog0ckow0k8/Dockerfile --build-arg SOURCE_COMMIT='da5abae0358001443a2438b970508c8c997eb62c' --build-arg 'COOLIFY_URL=https://uwcogw0cg8wwo4ws448g4cc8.vhost.hmtservice.online' --build-arg 'COOLIFY_FQDN=uwcogw0cg8wwo4ws448g4cc8.vhost.hmtservice.online' --build-arg 'COOLIFY_BRANCH=main' --build-arg 'COOLIFY_RESOURCE_UUID=uwcogw0cg8wwo4ws448g4cc8' --build-arg 'COOLIFY_CONTAINER_NAME=uwcogw0cg8wwo4ws448g4cc8-084403769534' --progress plain -t uwcogw0cg8wwo4ws448g4cc8:da5abae0358001443a2438b970508c8c997eb62c /artifacts/foskgs0s88oocoog0ckow0k8
[CMD]: docker exec foskgs0s88oocoog0ckow0k8 bash -c 'bash /artifacts/build.sh'
#0 building with "default" instance using docker driver
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 2.31kB done
#1 DONE 0.1s
#2 resolve image config for docker-image://docker.io/docker/dockerfile:1
#2 DONE 0.8s
#3 docker-image://docker.io/docker/dockerfile:1@sha256:9857836c9ee4268391bb5b09f9f157f3c91bb15821bb77969642813b0d00518d
#3 CACHED
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 2.31kB done
#1 DONE 0.1s
#4 [internal] load build definition from Dockerfile
#4 DONE 0.0s
#5 [internal] load metadata for docker.io/library/node:22-alpine
#5 DONE 2.0s
#6 [internal] load .dockerignore
#6 transferring context:
#6 transferring context: 2B done
#6 DONE 0.2s
#7 [base 1/1] FROM docker.io/library/node:22-alpine@sha256:9f3ae04faa4d2188825803bf890792f33cc39033c9241fc6bb201149470436ca
#7 resolve docker.io/library/node:22-alpine@sha256:9f3ae04faa4d2188825803bf890792f33cc39033c9241fc6bb201149470436ca 0.1s done
#7 ...
#8 [internal] load build context
#8 transferring context: 125.43kB 0.0s done
#8 DONE 0.2s
#7 [base 1/1] FROM docker.io/library/node:22-alpine@sha256:9f3ae04faa4d2188825803bf890792f33cc39033c9241fc6bb201149470436ca
#7 sha256:9f3ae04faa4d2188825803bf890792f33cc39033c9241fc6bb201149470436ca 6.41kB / 6.41kB done
#7 sha256:4437d7c27c4b9306c577caa17577dc7b367fc320fb7469dbe2c994e23b11d11c 1.72kB / 1.72kB done
#7 sha256:4f021eec40925e3101cfed8ecb38d55b09bb9d5e65b72b64b8a22f440053d108 6.21kB / 6.21kB done
#7 sha256:c407900702d9438094e167b32c235ca0518f2382e39fd2103dfddec2d7a0368b 0B / 50.96MB 0.1s
#7 sha256:19a105e4139619cfe616b958dd5be25b77fb21274d9dc8d999008d3f1e56a1c1 0B / 1.26MB 0.1s
#7 sha256:36b1e935258dedce526577e13de9618e02c3d6d3a68d715cc84b4d550ecb71e0 0B / 448B 0.2s
#7 sha256:c407900702d9438094e167b32c235ca0518f2382e39fd2103dfddec2d7a0368b 6.29MB / 50.96MB 0.9s
#7 sha256:c407900702d9438094e167b32c235ca0518f2382e39fd2103dfddec2d7a0368b 11.53MB / 50.96MB 1.1s
#7 sha256:c407900702d9438094e167b32c235ca0518f2382e39fd2103dfddec2d7a0368b 19.92MB / 50.96MB 1.2s
#7 sha256:19a105e4139619cfe616b958dd5be25b77fb21274d9dc8d999008d3f1e56a1c1 1.26MB / 1.26MB 1.2s done
#7 sha256:36b1e935258dedce526577e13de9618e02c3d6d3a68d715cc84b4d550ecb71e0 448B / 448B 1.1s done
#7 sha256:c407900702d9438094e167b32c235ca0518f2382e39fd2103dfddec2d7a0368b 28.31MB / 50.96MB 1.5s
#7 sha256:c407900702d9438094e167b32c235ca0518f2382e39fd2103dfddec2d7a0368b 36.70MB / 50.96MB 1.6s
#7 sha256:c407900702d9438094e167b32c235ca0518f2382e39fd2103dfddec2d7a0368b 44.04MB / 50.96MB 1.8s
#7 sha256:c407900702d9438094e167b32c235ca0518f2382e39fd2103dfddec2d7a0368b 48.98MB / 50.96MB 1.9s
#7 sha256:c407900702d9438094e167b32c235ca0518f2382e39fd2103dfddec2d7a0368b 50.96MB / 50.96MB 2.6s done
#7 extracting sha256:c407900702d9438094e167b32c235ca0518f2382e39fd2103dfddec2d7a0368b
#7 extracting sha256:c407900702d9438094e167b32c235ca0518f2382e39fd2103dfddec2d7a0368b 5.5s
#7 extracting sha256:c407900702d9438094e167b32c235ca0518f2382e39fd2103dfddec2d7a0368b 5.7s done
#7 extracting sha256:19a105e4139619cfe616b958dd5be25b77fb21274d9dc8d999008d3f1e56a1c1
#7 extracting sha256:19a105e4139619cfe616b958dd5be25b77fb21274d9dc8d999008d3f1e56a1c1 0.2s done
#7 extracting sha256:36b1e935258dedce526577e13de9618e02c3d6d3a68d715cc84b4d550ecb71e0
#7 extracting sha256:36b1e935258dedce526577e13de9618e02c3d6d3a68d715cc84b4d550ecb71e0 done
#7 DONE 10.0s
#9 [builder 1/4] WORKDIR /src/app
#9 DONE 3.0s
#10 [deps 1/4] RUN apk add --no-cache libc6-compat
#10 2.681 fetch https://dl-cdn.alpinelinux.org/alpine/v3.21/main/x86_64/APKINDEX.tar.gz
#10 ...
#11 [runner 2/6] RUN addgroup --system --gid 1001 nodejs
#11 DONE 0.5s
#10 [deps 1/4] RUN apk add --no-cache libc6-compat
#10 3.574 fetch https://dl-cdn.alpinelinux.org/alpine/v3.21/community/x86_64/APKINDEX.tar.gz
#10 ...
#12 [runner 3/6] RUN adduser --system --uid 1001 nextjs
#12 DONE 0.6s
#10 [deps 1/4] RUN apk add --no-cache libc6-compat
#10 5.095 (1/3) Installing musl-obstack (1.2.3-r2)
#10 5.198 (2/3) Installing libucontext (1.3.2-r0)
#10 5.280 (3/3) Installing gcompat (1.1.0-r4)
#10 5.389 OK: 10 MiB in 20 packages
#10 DONE 5.7s
#13 [deps 2/4] WORKDIR /src/app
#13 DONE 0.2s
#14 [deps 3/4] COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* .npmrc* ./
#14 DONE 0.3s
#15 [deps 4/4] RUN   if [ -f yarn.lock ]; then yarn --frozen-lockfile;   elif [ -f package-lock.json ]; then npm ci;   elif [ -f pnpm-lock.yaml ]; then corepack enable pnpm && pnpm i --frozen-lockfile;   else echo "Lockfile not found." && exit 1;   fi
#15 23.76
#15 23.76 added 145 packages, and audited 146 packages in 23s
#15 23.76
#15 23.76 36 packages are looking for funding
#15 23.76   run `npm fund` for details
#15 23.83
#15 23.83 1 critical severity vulnerability
#15 23.83
#15 23.83 To address all issues, run:
#15 23.83   npm audit fix --force
#15 23.83
#15 23.83 Run `npm audit` for details.
#15 23.83 npm notice
#15 23.83 npm notice New major version of npm available! 10.9.2 -> 11.4.1
#15 23.83 npm notice Changelog: https://github.com/npm/cli/releases/tag/v11.4.1
#15 23.83 npm notice To update run: npm install -g npm@11.4.1
#15 23.83 npm notice
#15 DONE 25.7s
#16 [builder 2/4] COPY --from=deps /src/app/node_modules ./node_modules
#16 DONE 13.0s
#17 [builder 3/4] COPY . .
#17 DONE 0.4s
#18 [builder 4/4] RUN   if [ -f yarn.lock ]; then yarn run build;   elif [ -f package-lock.json ]; then npm run build;   elif [ -f pnpm-lock.yaml ]; then corepack enable pnpm && pnpm run build;   else echo "Lockfile not found." && exit 1;   fi
#18 1.984
#18 1.984 > with-docker@0.1.0 build
#18 1.984 > next build
#18 1.984
#18 3.743 Attention: Next.js now collects completely anonymous telemetry regarding usage.
#18 3.745 This information is used to shape Next.js' roadmap and prioritize features.
#18 3.745 You can learn more, including how to opt-out if you'd not like to participate in this anonymous program, by visiting the following URL:
#18 3.745 https://nextjs.org/telemetry
#18 3.746
#18 4.389    ▲ Next.js 15.1.8
#18 4.389    - Environments: .env
#18 4.389
#18 4.413    Creating an optimized production build ...
#18 30.54  ✓ Compiled successfully
#18 30.55    Linting and checking validity of types ...
#18 37.20    Collecting page data ...
#18 43.72    Generating static pages (0/5) ...
#18 45.67    Generating static pages (1/5)
#18 45.67    Generating static pages (2/5)
#18 45.67    Generating static pages (3/5)
#18 45.67  ✓ Generating static pages (5/5)
#18 46.65    Finalizing page optimization ...
#18 46.65    Collecting build traces ...
#18 62.34
#18 62.35 Route (app)                              Size     First Load JS
#18 62.35 ┌ ○ /                                    5.57 kB         111 kB
#18 62.35 └ ○ /_not-found                          979 B           106 kB
#18 62.35 + First Load JS shared by all            105 kB
#18 62.35   ├ chunks/4bd1b696-20882bf820444624.js  52.9 kB
#18 62.35   ├ chunks/517-a5b8e86eee56a331.js       50.5 kB
#18 62.35   └ other shared chunks (total)          1.88 kB
#18 62.35
#18 62.35
#18 62.35 ○  (Static)  prerendered as static content
#18 62.35
#18 62.55 npm notice
#18 62.55 npm notice New major version of npm available! 10.9.2 -> 11.4.1
#18 62.55 npm notice Changelog: https://github.com/npm/cli/releases/tag/v11.4.1
#18 62.55 npm notice To update run: npm install -g npm@11.4.1
#18 62.55 npm notice
#18 DONE 63.3s
#19 [runner 4/6] COPY --from=builder /src/app/public ./public
#19 CACHED
#20 [runner 5/6] COPY --from=builder --chown=nextjs:nodejs /src/app/.next/standalone ./
#20 ERROR: failed to calculate checksum of ref 8522471f-2e42-4a28-9546-aedba82e8b66::1uswyluiqkxhgckwojxtevpmi: "/src/app/.next/standalone": not found
------
> [runner 5/6] COPY --from=builder --chown=nextjs:nodejs /src/app/.next/standalone ./:
------
Dockerfile:54
--------------------
52 |     # Automatically leverage output traces to reduce image size
53 |     # https://nextjs.org/docs/advanced-features/output-file-tracing
54 | >>> COPY --from=builder --chown=nextjs:nodejs /src/app/.next/standalone ./
55 |     COPY --from=builder --chown=nextjs:nodejs /src/app/.next/static ./.next/static
56 |
--------------------
ERROR: failed to solve: failed to compute cache key: failed to calculate checksum of ref 8522471f-2e42-4a28-9546-aedba82e8b66::1uswyluiqkxhgckwojxtevpmi: "/src/app/.next/standalone": not found
exit status 1
Oops something is not okay, are you okay? 😢
#0 building with "default" instance using docker driver
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 2.31kB done
#1 DONE 0.1s
#2 resolve image config for docker-image://docker.io/docker/dockerfile:1
#2 DONE 0.8s
#3 docker-image://docker.io/docker/dockerfile:1@sha256:9857836c9ee4268391bb5b09f9f157f3c91bb15821bb77969642813b0d00518d
#3 CACHED
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 2.31kB done
#1 DONE 0.1s
#4 [internal] load build definition from Dockerfile
#4 DONE 0.0s
#5 [internal] load metadata for docker.io/library/node:22-alpine
#5 DONE 2.0s
#6 [internal] load .dockerignore
#6 transferring context:
#6 transferring context: 2B done
#6 DONE 0.2s
#7 [base 1/1] FROM docker.io/library/node:22-alpine@sha256:9f3ae04faa4d2188825803bf890792f33cc39033c9241fc6bb201149470436ca
#7 resolve docker.io/library/node:22-alpine@sha256:9f3ae04faa4d2188825803bf890792f33cc39033c9241fc6bb201149470436ca 0.1s done
#7 ...
#8 [internal] load build context
#8 transferring context: 125.43kB 0.0s done
#8 DONE 0.2s
#7 [base 1/1] FROM docker.io/library/node:22-alpine@sha256:9f3ae04faa4d2188825803bf890792f33cc39033c9241fc6bb201149470436ca
#7 sha256:9f3ae04faa4d2188825803bf890792f33cc39033c9241fc6bb201149470436ca 6.41kB / 6.41kB done
#7 sha256:4437d7c27c4b9306c577caa17577dc7b367fc320fb7469dbe2c994e23b11d11c 1.72kB / 1.72kB done
#7 sha256:4f021eec40925e3101cfed8ecb38d55b09bb9d5e65b72b64b8a22f440053d108 6.21kB / 6.21kB done
#7 sha256:c407900702d9438094e167b32c235ca0518f2382e39fd2103dfddec2d7a0368b 0B / 50.96MB 0.1s
#7 sha256:19a105e4139619cfe616b958dd5be25b77fb21274d9dc8d999008d3f1e56a1c1 0B / 1.26MB 0.1s
#7 sha256:36b1e935258dedce526577e13de9618e02c3d6d3a68d715cc84b4d550ecb71e0 0B / 448B 0.2s
#7 sha256:c407900702d9438094e167b32c235ca0518f2382e39fd2103dfddec2d7a0368b 6.29MB / 50.96MB 0.9s
#7 sha256:c407900702d9438094e167b32c235ca0518f2382e39fd2103dfddec2d7a0368b 11.53MB / 50.96MB 1.1s
#7 sha256:c407900702d9438094e167b32c235ca0518f2382e39fd2103dfddec2d7a0368b 19.92MB / 50.96MB 1.2s
#7 sha256:19a105e4139619cfe616b958dd5be25b77fb21274d9dc8d999008d3f1e56a1c1 1.26MB / 1.26MB 1.2s done
#7 sha256:36b1e935258dedce526577e13de9618e02c3d6d3a68d715cc84b4d550ecb71e0 448B / 448B 1.1s done
#7 sha256:c407900702d9438094e167b32c235ca0518f2382e39fd2103dfddec2d7a0368b 28.31MB / 50.96MB 1.5s
#7 sha256:c407900702d9438094e167b32c235ca0518f2382e39fd2103dfddec2d7a0368b 36.70MB / 50.96MB 1.6s
#7 sha256:c407900702d9438094e167b32c235ca0518f2382e39fd2103dfddec2d7a0368b 44.04MB / 50.96MB 1.8s
#7 sha256:c407900702d9438094e167b32c235ca0518f2382e39fd2103dfddec2d7a0368b 48.98MB / 50.96MB 1.9s
#7 sha256:c407900702d9438094e167b32c235ca0518f2382e39fd2103dfddec2d7a0368b 50.96MB / 50.96MB 2.6s done
#7 extracting sha256:c407900702d9438094e167b32c235ca0518f2382e39fd2103dfddec2d7a0368b
#7 extracting sha256:c407900702d9438094e167b32c235ca0518f2382e39fd2103dfddec2d7a0368b 5.5s
#7 extracting sha256:c407900702d9438094e167b32c235ca0518f2382e39fd2103dfddec2d7a0368b 5.7s done
#7 extracting sha256:19a105e4139619cfe616b958dd5be25b77fb21274d9dc8d999008d3f1e56a1c1
#7 extracting sha256:19a105e4139619cfe616b958dd5be25b77fb21274d9dc8d999008d3f1e56a1c1 0.2s done
#7 extracting sha256:36b1e935258dedce526577e13de9618e02c3d6d3a68d715cc84b4d550ecb71e0
#7 extracting sha256:36b1e935258dedce526577e13de9618e02c3d6d3a68d715cc84b4d550ecb71e0 done
#7 DONE 10.0s
#9 [builder 1/4] WORKDIR /src/app
#9 DONE 3.0s
#10 [deps 1/4] RUN apk add --no-cache libc6-compat
#10 2.681 fetch https://dl-cdn.alpinelinux.org/alpine/v3.21/main/x86_64/APKINDEX.tar.gz
#10 ...
#11 [runner 2/6] RUN addgroup --system --gid 1001 nodejs
#11 DONE 0.5s
#10 [deps 1/4] RUN apk add --no-cache libc6-compat
#10 3.574 fetch https://dl-cdn.alpinelinux.org/alpine/v3.21/community/x86_64/APKINDEX.tar.gz
#10 ...
#12 [runner 3/6] RUN adduser --system --uid 1001 nextjs
#12 DONE 0.6s
#10 [deps 1/4] RUN apk add --no-cache libc6-compat
#10 5.095 (1/3) Installing musl-obstack (1.2.3-r2)
#10 5.198 (2/3) Installing libucontext (1.3.2-r0)
#10 5.280 (3/3) Installing gcompat (1.1.0-r4)
#10 5.389 OK: 10 MiB in 20 packages
#10 DONE 5.7s
#13 [deps 2/4] WORKDIR /src/app
#13 DONE 0.2s
#14 [deps 3/4] COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* .npmrc* ./
#14 DONE 0.3s
#15 [deps 4/4] RUN   if [ -f yarn.lock ]; then yarn --frozen-lockfile;   elif [ -f package-lock.json ]; then npm ci;   elif [ -f pnpm-lock.yaml ]; then corepack enable pnpm && pnpm i --frozen-lockfile;   else echo "Lockfile not found." && exit 1;   fi
#15 23.76
#15 23.76 added 145 packages, and audited 146 packages in 23s
#15 23.76
#15 23.76 36 packages are looking for funding
#15 23.76   run `npm fund` for details
#15 23.83
#15 23.83 1 critical severity vulnerability
#15 23.83
#15 23.83 To address all issues, run:
#15 23.83   npm audit fix --force
#15 23.83
#15 23.83 Run `npm audit` for details.
#15 23.83 npm notice
#15 23.83 npm notice New major version of npm available! 10.9.2 -> 11.4.1
#15 23.83 npm notice Changelog: https://github.com/npm/cli/releases/tag/v11.4.1
#15 23.83 npm notice To update run: npm install -g npm@11.4.1
#15 23.83 npm notice
#15 DONE 25.7s
#16 [builder 2/4] COPY --from=deps /src/app/node_modules ./node_modules
#16 DONE 13.0s
#17 [builder 3/4] COPY . .
#17 DONE 0.4s
#18 [builder 4/4] RUN   if [ -f yarn.lock ]; then yarn run build;   elif [ -f package-lock.json ]; then npm run build;   elif [ -f pnpm-lock.yaml ]; then corepack enable pnpm && pnpm run build;   else echo "Lockfile not found." && exit 1;   fi
#18 1.984
#18 1.984 > with-docker@0.1.0 build
#18 1.984 > next build
#18 1.984
#18 3.743 Attention: Next.js now collects completely anonymous telemetry regarding usage.
#18 3.745 This information is used to shape Next.js' roadmap and prioritize features.
#18 3.745 You can learn more, including how to opt-out if you'd not like to participate in this anonymous program, by visiting the following URL:
#18 3.745 https://nextjs.org/telemetry
#18 3.746
#18 4.389    ▲ Next.js 15.1.8
#18 4.389    - Environments: .env
#18 4.389
#18 4.413    Creating an optimized production build ...
#18 30.54  ✓ Compiled successfully
#18 30.55    Linting and checking validity of types ...
#18 37.20    Collecting page data ...
#18 43.72    Generating static pages (0/5) ...
#18 45.67    Generating static pages (1/5)
#18 45.67    Generating static pages (2/5)
#18 45.67    Generating static pages (3/5)
#18 45.67  ✓ Generating static pages (5/5)
#18 46.65    Finalizing page optimization ...
#18 46.65    Collecting build traces ...
#18 62.34
#18 62.35 Route (app)                              Size     First Load JS
#18 62.35 ┌ ○ /                                    5.57 kB         111 kB
#18 62.35 └ ○ /_not-found                          979 B           106 kB
#18 62.35 + First Load JS shared by all            105 kB
#18 62.35   ├ chunks/4bd1b696-20882bf820444624.js  52.9 kB
#18 62.35   ├ chunks/517-a5b8e86eee56a331.js       50.5 kB
#18 62.35   └ other shared chunks (total)          1.88 kB
#18 62.35
#18 62.35
#18 62.35 ○  (Static)  prerendered as static content
#18 62.35
#18 62.55 npm notice
#18 62.55 npm notice New major version of npm available! 10.9.2 -> 11.4.1
#18 62.55 npm notice Changelog: https://github.com/npm/cli/releases/tag/v11.4.1
#18 62.55 npm notice To update run: npm install -g npm@11.4.1
#18 62.55 npm notice
#18 DONE 63.3s
#19 [runner 4/6] COPY --from=builder /src/app/public ./public
#19 CACHED
#20 [runner 5/6] COPY --from=builder --chown=nextjs:nodejs /src/app/.next/standalone ./
#20 ERROR: failed to calculate checksum of ref 8522471f-2e42-4a28-9546-aedba82e8b66::1uswyluiqkxhgckwojxtevpmi: "/src/app/.next/standalone": not found
------
> [runner 5/6] COPY --from=builder --chown=nextjs:nodejs /src/app/.next/standalone ./:
------
Dockerfile:54
--------------------
52 |     # Automatically leverage output traces to reduce image size
53 |     # https://nextjs.org/docs/advanced-features/output-file-tracing
54 | >>> COPY --from=builder --chown=nextjs:nodejs /src/app/.next/standalone ./
55 |     COPY --from=builder --chown=nextjs:nodejs /src/app/.next/static ./.next/static
56 |
--------------------
ERROR: failed to solve: failed to compute cache key: failed to calculate checksum of ref 8522471f-2e42-4a28-9546-aedba82e8b66::1uswyluiqkxhgckwojxtevpmi: "/src/app/.next/standalone": not found
exit status 1
Deployment failed. Removing the new version of your application.
